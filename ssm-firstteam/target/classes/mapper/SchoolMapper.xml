<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.first.dao.SchoolMapper">
<!-- 开启二级缓存并设置参数 -->
	<cache eviction="FIFO" flushInterval="60000" readOnly="false" size="1024"></cache>
  
  <resultMap id="BaseResultMap" type="com.first.bean.School">
    <id column="schoolid" jdbcType="INTEGER" property="schoolid" />
    <result column="schoolname" jdbcType="VARCHAR" property="schoolname" />
    <result column="englishname" jdbcType="VARCHAR" property="englishname" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="schooltype" jdbcType="VARCHAR" property="schooltype" />
    <result column="nameofprincipal" jdbcType="VARCHAR" property="nameofprincipal" />
    <result column="telofprincipal" jdbcType="VARCHAR" property="telofprincipal" />
    <result column="telofschool" jdbcType="VARCHAR" property="telofschool" />
    <result column="postalcode" jdbcType="VARCHAR" property="postalcode" />
    <result column="homepage" jdbcType="VARCHAR" property="homepage" />
    <result column="emailofschool" jdbcType="VARCHAR" property="emailofschool" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.first.bean.School">
    <result column="history" jdbcType="LONGVARCHAR" property="history" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    schoolid, schoolname, englishname, address, schooltype, nameofprincipal, telofprincipal, 
    telofschool, postalcode, homepage, emailofschool
  </sql>
  <sql id="Blob_Column_List">
    history
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.first.bean.SchoolExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from school
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.first.bean.SchoolExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from school
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from school
    where schoolid = #{schoolid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from school
    where schoolid = #{schoolid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.first.bean.SchoolExample">
    delete from school
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.first.bean.School">
    insert into school (schoolid, schoolname, englishname, 
      address, schooltype, nameofprincipal, 
      telofprincipal, telofschool, postalcode, 
      homepage, emailofschool, history
      )
    values (#{schoolid,jdbcType=INTEGER}, #{schoolname,jdbcType=VARCHAR}, #{englishname,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{schooltype,jdbcType=VARCHAR}, #{nameofprincipal,jdbcType=VARCHAR}, 
      #{telofprincipal,jdbcType=VARCHAR}, #{telofschool,jdbcType=VARCHAR}, #{postalcode,jdbcType=VARCHAR}, 
      #{homepage,jdbcType=VARCHAR}, #{emailofschool,jdbcType=VARCHAR}, #{history,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.first.bean.School">
    insert into school
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schoolid != null">
        schoolid,
      </if>
      <if test="schoolname != null">
        schoolname,
      </if>
      <if test="englishname != null">
        englishname,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="schooltype != null">
        schooltype,
      </if>
      <if test="nameofprincipal != null">
        nameofprincipal,
      </if>
      <if test="telofprincipal != null">
        telofprincipal,
      </if>
      <if test="telofschool != null">
        telofschool,
      </if>
      <if test="postalcode != null">
        postalcode,
      </if>
      <if test="homepage != null">
        homepage,
      </if>
      <if test="emailofschool != null">
        emailofschool,
      </if>
      <if test="history != null">
        history,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schoolid != null">
        #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="schoolname != null">
        #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="englishname != null">
        #{englishname,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="schooltype != null">
        #{schooltype,jdbcType=VARCHAR},
      </if>
      <if test="nameofprincipal != null">
        #{nameofprincipal,jdbcType=VARCHAR},
      </if>
      <if test="telofprincipal != null">
        #{telofprincipal,jdbcType=VARCHAR},
      </if>
      <if test="telofschool != null">
        #{telofschool,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null">
        #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="homepage != null">
        #{homepage,jdbcType=VARCHAR},
      </if>
      <if test="emailofschool != null">
        #{emailofschool,jdbcType=VARCHAR},
      </if>
      <if test="history != null">
        #{history,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.first.bean.SchoolExample" resultType="java.lang.Long">
    select count(*) from school
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update school
    <set>
      <if test="record.schoolid != null">
        schoolid = #{record.schoolid,jdbcType=INTEGER},
      </if>
      <if test="record.schoolname != null">
        schoolname = #{record.schoolname,jdbcType=VARCHAR},
      </if>
      <if test="record.englishname != null">
        englishname = #{record.englishname,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.schooltype != null">
        schooltype = #{record.schooltype,jdbcType=VARCHAR},
      </if>
      <if test="record.nameofprincipal != null">
        nameofprincipal = #{record.nameofprincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.telofprincipal != null">
        telofprincipal = #{record.telofprincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.telofschool != null">
        telofschool = #{record.telofschool,jdbcType=VARCHAR},
      </if>
      <if test="record.postalcode != null">
        postalcode = #{record.postalcode,jdbcType=VARCHAR},
      </if>
      <if test="record.homepage != null">
        homepage = #{record.homepage,jdbcType=VARCHAR},
      </if>
      <if test="record.emailofschool != null">
        emailofschool = #{record.emailofschool,jdbcType=VARCHAR},
      </if>
      <if test="record.history != null">
        history = #{record.history,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update school
    set schoolid = #{record.schoolid,jdbcType=INTEGER},
      schoolname = #{record.schoolname,jdbcType=VARCHAR},
      englishname = #{record.englishname,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      schooltype = #{record.schooltype,jdbcType=VARCHAR},
      nameofprincipal = #{record.nameofprincipal,jdbcType=VARCHAR},
      telofprincipal = #{record.telofprincipal,jdbcType=VARCHAR},
      telofschool = #{record.telofschool,jdbcType=VARCHAR},
      postalcode = #{record.postalcode,jdbcType=VARCHAR},
      homepage = #{record.homepage,jdbcType=VARCHAR},
      emailofschool = #{record.emailofschool,jdbcType=VARCHAR},
      history = #{record.history,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update school
    set schoolid = #{record.schoolid,jdbcType=INTEGER},
      schoolname = #{record.schoolname,jdbcType=VARCHAR},
      englishname = #{record.englishname,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      schooltype = #{record.schooltype,jdbcType=VARCHAR},
      nameofprincipal = #{record.nameofprincipal,jdbcType=VARCHAR},
      telofprincipal = #{record.telofprincipal,jdbcType=VARCHAR},
      telofschool = #{record.telofschool,jdbcType=VARCHAR},
      postalcode = #{record.postalcode,jdbcType=VARCHAR},
      homepage = #{record.homepage,jdbcType=VARCHAR},
      emailofschool = #{record.emailofschool,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.first.bean.School">
    update school
    <set>
      <if test="schoolname != null">
        schoolname = #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="englishname != null">
        englishname = #{englishname,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="schooltype != null">
        schooltype = #{schooltype,jdbcType=VARCHAR},
      </if>
      <if test="nameofprincipal != null">
        nameofprincipal = #{nameofprincipal,jdbcType=VARCHAR},
      </if>
      <if test="telofprincipal != null">
        telofprincipal = #{telofprincipal,jdbcType=VARCHAR},
      </if>
      <if test="telofschool != null">
        telofschool = #{telofschool,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null">
        postalcode = #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="homepage != null">
        homepage = #{homepage,jdbcType=VARCHAR},
      </if>
      <if test="emailofschool != null">
        emailofschool = #{emailofschool,jdbcType=VARCHAR},
      </if>
      <if test="history != null">
        history = #{history,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where schoolid = #{schoolid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.first.bean.School">
    update school
    set schoolname = #{schoolname,jdbcType=VARCHAR},
      englishname = #{englishname,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      schooltype = #{schooltype,jdbcType=VARCHAR},
      nameofprincipal = #{nameofprincipal,jdbcType=VARCHAR},
      telofprincipal = #{telofprincipal,jdbcType=VARCHAR},
      telofschool = #{telofschool,jdbcType=VARCHAR},
      postalcode = #{postalcode,jdbcType=VARCHAR},
      homepage = #{homepage,jdbcType=VARCHAR},
      emailofschool = #{emailofschool,jdbcType=VARCHAR},
      history = #{history,jdbcType=LONGVARCHAR}
    where schoolid = #{schoolid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.first.bean.School">
    update school
    set schoolname = #{schoolname,jdbcType=VARCHAR},
      englishname = #{englishname,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      schooltype = #{schooltype,jdbcType=VARCHAR},
      nameofprincipal = #{nameofprincipal,jdbcType=VARCHAR},
      telofprincipal = #{telofprincipal,jdbcType=VARCHAR},
      telofschool = #{telofschool,jdbcType=VARCHAR},
      postalcode = #{postalcode,jdbcType=VARCHAR},
      homepage = #{homepage,jdbcType=VARCHAR},
      emailofschool = #{emailofschool,jdbcType=VARCHAR}
    where schoolid = #{schoolid,jdbcType=INTEGER}
  </update>
</mapper>