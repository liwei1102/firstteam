<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.first.dao.RecruitmentinfoMapper">
<!-- 开启二级缓存并设置参数 -->
	<cache eviction="FIFO" flushInterval="60000" readOnly="false" size="1024"></cache>
  
  <resultMap id="BaseResultMap" type="com.first.bean.Recruitmentinfo">
    <id column="infoid" jdbcType="INTEGER" property="infoid" />
    <result column="companyid" jdbcType="INTEGER" property="companyid" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="dates" jdbcType="DATE" property="dates" />
    <result column="post" jdbcType="VARCHAR" property="post" />
    <result column="numbers" jdbcType="INTEGER" property="numbers" />
    <result column="salary" jdbcType="VARCHAR" property="salary" />
    <result column="educationalrequest" jdbcType="VARCHAR" property="educationalrequest" />
    <result column="specialty" jdbcType="VARCHAR" property="specialty" />
    <result column="jobaddress" jdbcType="VARCHAR" property="jobaddress" />
    <result column="person" jdbcType="VARCHAR" property="person" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="click" jdbcType="INTEGER" property="click" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.first.bean.RecruitmentinfoWithBLOBs">
    <result column="recruitrequest" jdbcType="LONGVARCHAR" property="recruitrequest" />
    <result column="other" jdbcType="LONGVARCHAR" property="other" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    infoid, companyid, company, dates, post, numbers, salary, educationalrequest, specialty, 
    jobaddress, person, tel, email, click
  </sql>
  <sql id="Blob_Column_List">
    recruitrequest, other
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.first.bean.RecruitmentinfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from recruitmentinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.first.bean.RecruitmentinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from recruitmentinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from recruitmentinfo
    where infoid = #{infoid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from recruitmentinfo
    where infoid = #{infoid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.first.bean.RecruitmentinfoExample">
    delete from recruitmentinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.first.bean.RecruitmentinfoWithBLOBs">
    insert into recruitmentinfo (infoid, companyid, company, 
      dates, post, numbers, 
      salary, educationalrequest, specialty, 
      jobaddress, person, tel, 
      email, click, recruitrequest, 
      other)
    values (#{infoid,jdbcType=INTEGER}, #{companyid,jdbcType=INTEGER}, #{company,jdbcType=VARCHAR}, 
      #{dates,jdbcType=DATE}, #{post,jdbcType=VARCHAR}, #{numbers,jdbcType=INTEGER}, 
      #{salary,jdbcType=VARCHAR}, #{educationalrequest,jdbcType=VARCHAR}, #{specialty,jdbcType=VARCHAR}, 
      #{jobaddress,jdbcType=VARCHAR}, #{person,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{click,jdbcType=INTEGER}, #{recruitrequest,jdbcType=LONGVARCHAR}, 
      #{other,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.first.bean.RecruitmentinfoWithBLOBs">
    insert into recruitmentinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="infoid != null">
        infoid,
      </if>
      <if test="companyid != null">
        companyid,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="dates != null">
        dates,
      </if>
      <if test="post != null">
        post,
      </if>
      <if test="numbers != null">
        numbers,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="educationalrequest != null">
        educationalrequest,
      </if>
      <if test="specialty != null">
        specialty,
      </if>
      <if test="jobaddress != null">
        jobaddress,
      </if>
      <if test="person != null">
        person,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="click != null">
        click,
      </if>
      <if test="recruitrequest != null">
        recruitrequest,
      </if>
      <if test="other != null">
        other,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="infoid != null">
        #{infoid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="dates != null">
        #{dates,jdbcType=DATE},
      </if>
      <if test="post != null">
        #{post,jdbcType=VARCHAR},
      </if>
      <if test="numbers != null">
        #{numbers,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=VARCHAR},
      </if>
      <if test="educationalrequest != null">
        #{educationalrequest,jdbcType=VARCHAR},
      </if>
      <if test="specialty != null">
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="jobaddress != null">
        #{jobaddress,jdbcType=VARCHAR},
      </if>
      <if test="person != null">
        #{person,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="click != null">
        #{click,jdbcType=INTEGER},
      </if>
      <if test="recruitrequest != null">
        #{recruitrequest,jdbcType=LONGVARCHAR},
      </if>
      <if test="other != null">
        #{other,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.first.bean.RecruitmentinfoExample" resultType="java.lang.Long">
    select count(*) from recruitmentinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update recruitmentinfo
    <set>
      <if test="record.infoid != null">
        infoid = #{record.infoid,jdbcType=INTEGER},
      </if>
      <if test="record.companyid != null">
        companyid = #{record.companyid,jdbcType=INTEGER},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.dates != null">
        dates = #{record.dates,jdbcType=DATE},
      </if>
      <if test="record.post != null">
        post = #{record.post,jdbcType=VARCHAR},
      </if>
      <if test="record.numbers != null">
        numbers = #{record.numbers,jdbcType=INTEGER},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=VARCHAR},
      </if>
      <if test="record.educationalrequest != null">
        educationalrequest = #{record.educationalrequest,jdbcType=VARCHAR},
      </if>
      <if test="record.specialty != null">
        specialty = #{record.specialty,jdbcType=VARCHAR},
      </if>
      <if test="record.jobaddress != null">
        jobaddress = #{record.jobaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.person != null">
        person = #{record.person,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.click != null">
        click = #{record.click,jdbcType=INTEGER},
      </if>
      <if test="record.recruitrequest != null">
        recruitrequest = #{record.recruitrequest,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.other != null">
        other = #{record.other,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update recruitmentinfo
    set infoid = #{record.infoid,jdbcType=INTEGER},
      companyid = #{record.companyid,jdbcType=INTEGER},
      company = #{record.company,jdbcType=VARCHAR},
      dates = #{record.dates,jdbcType=DATE},
      post = #{record.post,jdbcType=VARCHAR},
      numbers = #{record.numbers,jdbcType=INTEGER},
      salary = #{record.salary,jdbcType=VARCHAR},
      educationalrequest = #{record.educationalrequest,jdbcType=VARCHAR},
      specialty = #{record.specialty,jdbcType=VARCHAR},
      jobaddress = #{record.jobaddress,jdbcType=VARCHAR},
      person = #{record.person,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      click = #{record.click,jdbcType=INTEGER},
      recruitrequest = #{record.recruitrequest,jdbcType=LONGVARCHAR},
      other = #{record.other,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update recruitmentinfo
    set infoid = #{record.infoid,jdbcType=INTEGER},
      companyid = #{record.companyid,jdbcType=INTEGER},
      company = #{record.company,jdbcType=VARCHAR},
      dates = #{record.dates,jdbcType=DATE},
      post = #{record.post,jdbcType=VARCHAR},
      numbers = #{record.numbers,jdbcType=INTEGER},
      salary = #{record.salary,jdbcType=VARCHAR},
      educationalrequest = #{record.educationalrequest,jdbcType=VARCHAR},
      specialty = #{record.specialty,jdbcType=VARCHAR},
      jobaddress = #{record.jobaddress,jdbcType=VARCHAR},
      person = #{record.person,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      click = #{record.click,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.first.bean.RecruitmentinfoWithBLOBs">
    update recruitmentinfo
    <set>
      <if test="companyid != null">
        companyid = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="dates != null">
        dates = #{dates,jdbcType=DATE},
      </if>
      <if test="post != null">
        post = #{post,jdbcType=VARCHAR},
      </if>
      <if test="numbers != null">
        numbers = #{numbers,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=VARCHAR},
      </if>
      <if test="educationalrequest != null">
        educationalrequest = #{educationalrequest,jdbcType=VARCHAR},
      </if>
      <if test="specialty != null">
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="jobaddress != null">
        jobaddress = #{jobaddress,jdbcType=VARCHAR},
      </if>
      <if test="person != null">
        person = #{person,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="click != null">
        click = #{click,jdbcType=INTEGER},
      </if>
      <if test="recruitrequest != null">
        recruitrequest = #{recruitrequest,jdbcType=LONGVARCHAR},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where infoid = #{infoid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.first.bean.RecruitmentinfoWithBLOBs">
    update recruitmentinfo
    set companyid = #{companyid,jdbcType=INTEGER},
      company = #{company,jdbcType=VARCHAR},
      dates = #{dates,jdbcType=DATE},
      post = #{post,jdbcType=VARCHAR},
      numbers = #{numbers,jdbcType=INTEGER},
      salary = #{salary,jdbcType=VARCHAR},
      educationalrequest = #{educationalrequest,jdbcType=VARCHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      jobaddress = #{jobaddress,jdbcType=VARCHAR},
      person = #{person,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      click = #{click,jdbcType=INTEGER},
      recruitrequest = #{recruitrequest,jdbcType=LONGVARCHAR},
      other = #{other,jdbcType=LONGVARCHAR}
    where infoid = #{infoid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.first.bean.Recruitmentinfo">
    update recruitmentinfo
    set companyid = #{companyid,jdbcType=INTEGER},
      company = #{company,jdbcType=VARCHAR},
      dates = #{dates,jdbcType=DATE},
      post = #{post,jdbcType=VARCHAR},
      numbers = #{numbers,jdbcType=INTEGER},
      salary = #{salary,jdbcType=VARCHAR},
      educationalrequest = #{educationalrequest,jdbcType=VARCHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      jobaddress = #{jobaddress,jdbcType=VARCHAR},
      person = #{person,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      click = #{click,jdbcType=INTEGER}
    where infoid = #{infoid,jdbcType=INTEGER}
  </update>
</mapper>