<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.first.dao.ResumeMapper">
<!-- 开启二级缓存并设置参数 -->
	<cache eviction="FIFO" flushInterval="60000" readOnly="false" size="1024"></cache>
  
  <resultMap id="BaseResultMap" type="com.first.bean.Resume">
    <id column="resumeid" jdbcType="INTEGER" property="resumeid" />
    <result column="stuextendid" jdbcType="INTEGER" property="stuextendid" />
    <result column="resumestatus" jdbcType="VARCHAR" property="resumestatus" />
    <result column="employeed" jdbcType="BIT" property="employeed" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.first.bean.Resume">
    <result column="resumeresult" jdbcType="LONGVARCHAR" property="resumeresult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    resumeid, stuextendid, resumestatus, employeed
  </sql>
  <sql id="Blob_Column_List">
    resumeresult
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.first.bean.ResumeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.first.bean.ResumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from resume
    where resumeid = #{resumeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resume
    where resumeid = #{resumeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.first.bean.ResumeExample">
    delete from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.first.bean.Resume">
    insert into resume (resumeid, stuextendid, resumestatus, 
      employeed, resumeresult)
    values (#{resumeid,jdbcType=INTEGER}, #{stuextendid,jdbcType=INTEGER}, #{resumestatus,jdbcType=VARCHAR}, 
      #{employeed,jdbcType=BIT}, #{resumeresult,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.first.bean.Resume">
    insert into resume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resumeid != null">
        resumeid,
      </if>
      <if test="stuextendid != null">
        stuextendid,
      </if>
      <if test="resumestatus != null">
        resumestatus,
      </if>
      <if test="employeed != null">
        employeed,
      </if>
      <if test="resumeresult != null">
        resumeresult,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resumeid != null">
        #{resumeid,jdbcType=INTEGER},
      </if>
      <if test="stuextendid != null">
        #{stuextendid,jdbcType=INTEGER},
      </if>
      <if test="resumestatus != null">
        #{resumestatus,jdbcType=VARCHAR},
      </if>
      <if test="employeed != null">
        #{employeed,jdbcType=BIT},
      </if>
      <if test="resumeresult != null">
        #{resumeresult,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.first.bean.ResumeExample" resultType="java.lang.Long">
    select count(*) from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update resume
    <set>
      <if test="record.resumeid != null">
        resumeid = #{record.resumeid,jdbcType=INTEGER},
      </if>
      <if test="record.stuextendid != null">
        stuextendid = #{record.stuextendid,jdbcType=INTEGER},
      </if>
      <if test="record.resumestatus != null">
        resumestatus = #{record.resumestatus,jdbcType=VARCHAR},
      </if>
      <if test="record.employeed != null">
        employeed = #{record.employeed,jdbcType=BIT},
      </if>
      <if test="record.resumeresult != null">
        resumeresult = #{record.resumeresult,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update resume
    set resumeid = #{record.resumeid,jdbcType=INTEGER},
      stuextendid = #{record.stuextendid,jdbcType=INTEGER},
      resumestatus = #{record.resumestatus,jdbcType=VARCHAR},
      employeed = #{record.employeed,jdbcType=BIT},
      resumeresult = #{record.resumeresult,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update resume
    set resumeid = #{record.resumeid,jdbcType=INTEGER},
      stuextendid = #{record.stuextendid,jdbcType=INTEGER},
      resumestatus = #{record.resumestatus,jdbcType=VARCHAR},
      employeed = #{record.employeed,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.first.bean.Resume">
    update resume
    <set>
      <if test="stuextendid != null">
        stuextendid = #{stuextendid,jdbcType=INTEGER},
      </if>
      <if test="resumestatus != null">
        resumestatus = #{resumestatus,jdbcType=VARCHAR},
      </if>
      <if test="employeed != null">
        employeed = #{employeed,jdbcType=BIT},
      </if>
      <if test="resumeresult != null">
        resumeresult = #{resumeresult,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where resumeid = #{resumeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.first.bean.Resume">
    update resume
    set stuextendid = #{stuextendid,jdbcType=INTEGER},
      resumestatus = #{resumestatus,jdbcType=VARCHAR},
      employeed = #{employeed,jdbcType=BIT},
      resumeresult = #{resumeresult,jdbcType=LONGVARCHAR}
    where resumeid = #{resumeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.first.bean.Resume">
    update resume
    set stuextendid = #{stuextendid,jdbcType=INTEGER},
      resumestatus = #{resumestatus,jdbcType=VARCHAR},
      employeed = #{employeed,jdbcType=BIT}
    where resumeid = #{resumeid,jdbcType=INTEGER}
  </update>
</mapper>